plugins {
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	id 'groovy'
	id 'com.diffplug.spotless' version '6.18.0'
	id 'idea' // optional (to generate IntelliJ IDEA project files)
	id "org.flywaydb.flyway" version "9.16.3"
	id "io.freefair.sass-java" version "8.0.1"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.data:spring-data-commons'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'net.coobird:thumbnailator:0.4.19'
	implementation 'com.h2database:h2:2.1.214'
	implementation 'org.flywaydb:flyway-core:9.16.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	testImplementation(platform("org.junit:junit-bom:5.8.2"))
	testImplementation('org.junit.jupiter:junit-jupiter')
}

group = 'co.jp.groves'
version = '1.0.0-SNAPSHOT'
description = 'myboots'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'
		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
//		googleJavaFormat('1.16.0')
		palantirJavaFormat('2.9.0')
		// fix formatting of type annotations
		formatAnnotations()
//		licenseHeader '/* (C)$YEAR */'
	}
}

flyway {
	url = "jdbc:h2:mem:myboots"
	user = 'sa'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}
